{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction 2020年，我开始了系统的学习大数据，希望能通过自己的努力转型到大数据开发工程师这个岗位。 越学越发现，东西是真滴多 -。- 所以建立了GitBook来记录自己的学习笔记，这个笔记前期不会记录重要原理，目前的计划是整理Scala语法，以及记录大数据工作中的一些操作方式，类似于一个操作手册，原理性的博文都会记录在自己的博客里：ilovenorth 希望这本GitBook可以作为我工作生活的另一个起点。 PS：目前不会公开，等有了一些笔记的。 "},"scala/chapter01_introduce.html":{"url":"scala/chapter01_introduce.html","title":"第一章 Scala概述","keywords":"","body":""},"scala/chapter02_var.html":{"url":"scala/chapter02_var.html","title":"第二章 变量","keywords":"","body":"Scala 变量 Scala中变量的声明方式 var | val 变量名称 : 变量类型 = 变量的值 var name : String = \"zhangsan\" var age : Int = 10 var c : Char = 'c' var flag : Boolean = true var score : Double = 1.0 scala声明变量必须显示的初始化 不能如下 var name : String name = \"zhangsan\" //会报错 声明变量时，类型可以省略 // 能省则省 // scala为了让开发过程变得简单 可以将自动推断出来的内容省略 var name = \"zhangsan\" 使用var声明的变量的值可以修改 var age : Int = 10 age = 20 使用val声明的变量的值无法修改 val name_val : String = \"zhangsan\" name_val = \"xiaoming\" //会报错 在方法的外部声明的变量，如果采用val关键字，等同于使用final修饰 object Scala01_Var { // 在方法的外部声明的变量如果采用val关键字，等同于使用final修饰 val sex : String = \"男\" def main(args: Array[String]): Unit = { } } 这里我们可以用JD-GUI反编译一下 总结： 声明变量时，类型可以省略（就是叫 类型推断） 类型确定后，就不能修改，说明Scala 是强数据类型语言 在声明/定义一个变量时，可以使用var 或者 val 来修饰， var 修饰的变量可改变，val 修饰的变量不可改 val修饰的对象属性在编译后，等同于加上final "},"scala/":{"url":"scala/","title":"第三章 运算符","keywords":"","body":"Introduction 2020年，我开始了系统的学习大数据，希望能通过自己的努力转型到大数据开发工程师这个岗位。 越学越发现，东西是真滴多 -。- 所以建立了GitBook来记录自己的学习笔记，这个笔记前期不会记录重要原理，目前的计划是整理Scala语法，以及记录大数据工作中的一些操作方式，类似于一个操作手册，原理性的博文都会记录在自己的博客里：ilovenorth 希望这本GitBook可以作为我工作生活的另一个起点。 PS：目前不会公开，等有了一些笔记的。 "}}